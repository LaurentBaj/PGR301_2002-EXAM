name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Run tests
        run: mvn -B package --file pom.xml

      # Build and push to ECR
      - name: Build image
        run: docker build -t 2002 .
      - name: Tag new build
        run: docker tag 2002:latest 244530008913.dkr.ecr.eu-north-1.amazonaws.com/2002:latest
# Crashes upon pushing - I tried using the secrets which I've saved in the repository
#      - name: Push to ECR
#        run: docker push 244530008913.dkr.ecr.eu-north-1.amazonaws.com/2002:latest



### Attempt at integrating Terraform
# https://learn.hashicorp.com/tutorials/terraform/github-actions
## INIT, APPLY and combine it  with Actions
#      - name: Terraform Init
#        run: terraform init
#      - name: Terraform Apply
#        run: terraform apply
#
#      - name: Update Pull Request
#        uses: actions/github-script@0.9.0
#        if: github.event_name == 'pull_request'
#          env:
#           PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
#          with:
#              github-token: ${{ secrets.GITHUB_TOKEN }}
#              script: |
#                const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
#                #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
#                #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
#                #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
#
#                <details><summary>Show Plan</summary>
#                  \`\`\`\n      ${process.env.PLAN}      \`\`\`
#                  </details>
#                  *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
#                  github.issues.createComment({        issue_number:
#                  context.issue.number,        owner:
#                  context.repo.owner,        repo:
#                  context.repo.repo,        body: output
#                })
#
